#!/usr/bin/perl

$o=$ARGV[0];
$qstat="qstat -f";

if ($o=~/^[0-9]+$/){
    print `$qstat $o`;
    exit();
}

$hostname=`hostname`;

$set=" my_high_max= 0 my_low_max= 0 my_tot_max= 300 n_tot_max= 1100 n_tot_casp= 0";

%S=(
    'R'=>'R',
    'Q'=>'=',
    'S'=>'%',
    'E'=>'-',
    );

%month=(
    'Jan'=>'01',
    'Feb'=>'02',
    'Mar'=>'03',
    'Apr'=>'04',
    'May'=>'05',
    'Jun'=>'06',
    'Jul'=>'07',
    'Aug'=>'08',
    'Sep'=>'09',
    'Oct'=>'10',
    'Nov'=>'11',
    'Dec'=>'12',
);

@gg=`$qstat|grep -ohP "Job_Owner\\s*=\\s*(\\w+)\\@"|sort -n|uniq|grep -ohP "\\w+\\@"|sed 's/@//g'`;
chomp @gg;

pos42:;
@lines=`$qstat`;
$nl=@lines;
if($nl <10){
    printf "no job\n";
    sleep(10);
    goto pos42;
}
$USER=$ENV{"USER"};
printf "  ID $USER\n";
$I=0;
$nn=0;
$nc=0;
$nn_sub=0;
$nr_all=0;
$n_yzhang=0;
$nr_group=0;
$nsub_zhang=0;
undef %nj;
foreach $line(@lines){
    $I++;
    $id=$1 if($line=~/Job Id\:\s*(\d+)/);
    $id=$1 if($line=~/Job Id\:\s*(\d+\[\d+\])/);
    $jobname=$1 if($line=~/Job_Name =\s*(\S+)/);
    $status=$1 if($line=~/job_state =\s*(\S+)/);
    $runtime=$1 if($line=~/resources_used.walltime =\s*(\S+)/);
    $memory=$1 if($line=~/Resource_List.mem =\s*(\S+)/);
    $qtime=$1 if($line=~/qtime =\s*(.+)/);
    $user=$1 if($line=~/Job_Owner =\s*(\S+)\@/);
    $walltime=$1 if($line=~/Resource_List.walltime =\s*(\S+)/);
    if($line=~/queue =\s*(\S+)/){
	$q=$1;
	if($q eq "urgent"){
	    $q="UG";
	}
    }
    $mk=1 if($line=~/etime/); #end of the job statement
    #######
    #if($line=~/exec_vnode =/){
    if($line=~/exec_host =/){
	$tmp1="";
	for($j=$I;$j<=$I+100;$j++){
	    $tmp=$lines[$j-1];
	    $tmp=~s/^\s+//mg;
	    $tmp=~s/\n//mg;
	    goto pos1 if($tmp=~/Hold_Type/);
	    goto pos1 if($tmp=~/Join_Path/);
	    $tmp1 .= $tmp;
	}
      pos1:
	@ll=split('\)',$tmp1);
	foreach $l(@ll){
	    if($l=~/compute-(\d+-\d+)\// || $l=~/nyx(\d+)/){
		$node="n$1";
		if($node=~/(\d+\-\d+)/){
		    $node="C$1";
		}
		$nn++;
		### for print
		$nc++;
		$comp{$nc}=$node;
		$n_comp{$nc}=1;
		###
	    }
	}
	#printf "$tmp1\n";
	#printf "id=$id, nn=$nn\n";
    }
    $nn=0 if($status ne "R");
    if($nn>1){
	$nn_sub=$nn;
    }else{
	$nn_sub=1;
    }
    if($line!~/\S+/ && $mk==1){
	#printf "-------out-------\n";
	#goto pos6 if($status eq "E"); #ngelect jobs with "-"
	$nr_all+=$nn;
	foreach $g(@gg){
	    if($user eq $g){ # Zhang-lab
		$nr_group+=$nn;
		$ng_r{$g}+=$nn;
		$ng_t{$g}+=$nn_sub;
		if($q=~/UG/){
		    $nr_high{$g}+=$nn;
		    $nt_high{$g}+=$nn_sub;
		}elsif($q=~/cas/){
		    $nr_casp{$g}+=$nn;
		    $nt_casp{$g}+=$nn_sub;
		}else{
		    $nr_low{$g}+=$nn;
		    $nt_low{$g}+=$nn_sub;
		}
		if($jobname=~/S2/){
		    $n_server+=$nn;
		}
	    }
	}
	foreach $pe(@gg){
	    if($pe eq $user){
		goto pos3;
	    }
	}
	$n_missuser++;
	$missuser{$n_missuser}=$user;
      pos3:;
	$node="" if($status ne "R" && $status ne "S" && $status ne "E");
	if(length $o >0 && $o ne "node"){
	    if($o eq "zhanglab"){
		if($q ne "urgent_zhanglab" && $q ne "zhanglab"){
		    goto pos6;
		}
	    }elsif($o eq "casp" || $o eq "cas"){
		if($q ne "casp"){
		    goto pos6;
		}
	    }elsif($o eq "def"){
		if($q ne "default"){
		    goto pos6;
		}
	    }elsif($o eq "UG"){
		if($q ne "UG"){
		    goto pos6;
		}
	    }elsif($o eq "R"){
		if($status ne "R"){
		    goto pos6;
		}
	    }else{
		if($user ne $o){
		    goto pos6;
		}
	    }
	}
	#printf "nc=$nc\n";
	$month_str=$month{substr($qtime,4,3)};
	$day_str=substr($qtime,8,2);
	$day_str='0'.substr($day_str,1,1) if ($day_str=~/\s\S/);
	$time_str=substr($qtime,11,8);
	$queue_time=$month_str.'-'.$day_str.';'.$time_str;
	if($nc>0){
	    for($i1=1;$i1<=$nc;$i1++){
		#printf "%7s %3s %8s %5s(%2d/%3d) %1s %20s %9s %9s %15s %6s\n",
		printf "%7s %3s %8s %5s %1s %20s %9s %9s %15s %6s\n",
		$id,substr($q,0,3),substr($user,0,8),
		$comp{$i1}, #$n_comp{$i1},$nr_group,
		$S{$status},substr($jobname,0,20),
		$runtime,$walltime,
		$queue_time,substr($memory,0,6);

		####### for node statistics ###############
		if($node=~/\S/){
		    $nj{$node}++;
		    $job{$node,$nj{$node}}=$jobname;
		    $who{$node,$nj{$node}}=$user;
		}
	    }
	}else{
	    #printf "%7s %3s %8s %5s(%2d/%3d) %1s %20s %9s %9s %15s %6s\n",
	    printf "%7s %3s %8s %5s %1s %20s %9s %9s %15s %6s\n",
	    $id,substr($q,0,3),substr($user,0,8),
	    $node, #$nn,$nr_group,
	    $S{$status},substr($jobname,0,20),
	    $runtime,$walltime,
	    $queue_time,substr($memory,0,6);
	    
	    ####### for node statistics ###############
	    if($node=~/\S/){
		$nj{$node}++;
		$job{$node,$nj{$node}}=$jobname;
		$who{$node,$nj{$node}}=$user;
	    }
	}
	
	pos6:;
	
	$id="";;
	$user="";
	$node="";
	$nn=0;
	$nc=0;
	$status="";
	$jobname="";
	$runtime="";
	$memory="";
	$walltime="";
	$qtime="";
	$mk="";
    }
}
#$N_high=160;
#$N_low=116; #58*2=116, 58*3=174 #///////
printf "$set\n";
printf "--------      n_urgent  n_default    n_all      n_casp\n";
$ng_rt=0; 
$ng_tt=0;
foreach $g(@gg){
    $ng_rt+=$ng_r{$g};
    $ng_tt+=$ng_t{$g};
    $nr_high_all+=$nr_high{$g};
    $nr_low_all+=$nr_low{$g};
    $nr_casp_all+=$nr_casp{$g};
    $nt_high_all+=$nt_high{$g};
    $nt_low_all+=$nt_low{$g};
    $nt_casp_all+=$nt_casp{$g};
    if($ng_t{$g}>0 || $ng_r{$g}>0){
        printf "%10s\_ %4d(%4d) %4d(%4d) %4d(%4d) %4d(%4d)\n",
        $g,
        $nt_high{$g},$nr_high{$g},
        $nt_low{$g},$nr_low{$g},
        $ng_t{$g},$ng_r{$g},
        $nt_casp{$g},$nr_casp{$g};
    }
}
printf "%10s\_ %4d(%4d) %4d(%4d) %4d(%4d) %4d(%4d)\n",
    '_all',
    $nt_high_all,$nr_high_all,
    $nt_low_all,$nr_low_all,
    $ng_tt,$ng_rt,
    $nt_casp_all,$nr_casp_all;
printf "------\n";

if($n_missuser>0){
    for($i=1;$i<=$n_missuser;$i++){
	printf "$i $missuser{$i} is not in the list\n";
    }
}

############ count nodes ===================>
$n_free=0;
for($i=5898;$i<=5957;$i++){
    $node="n$i";
    if($o eq "node"){
	$tmp=20-$nj{$node};
	if($tmp==20){
	    printf "%5s: down",$node;
	}elsif($tmp==0){
	    printf "%5s: -- ",$node;
	}else{
	    printf "%5s: %2d ",$node,$tmp;
	}
    }
    if($o eq "node"){
	$n1=0;
	for($k=1;$k<=$nj{$node};$k++){
	    printf " %5s(%4s)",
	    substr($job{$node,$k},0,5),
	    substr($who{$node,$k},0,4);
	    $n1++;
	    if($n1>=5){
		printf "\n";
		printf "%10s";
		$n1=0;
	    }
	}
	printf "\n";
    }
    $n_node_tot++;
    #printf "$node - $nj{$node}\n";
    if($nj{$node}<1){ #node down
	$n_down++;
    }else{     #node up
	$n_up++;
	$n_free+=20-$nj{$node};
    }
}
printf "#node_tot= %2d, #node_on= %3d, #node_down= %3d\n",
    $n_node_tot,$n_up,$n_down;
printf "#job_cap= %4d, #job_max= %4d,  #job_run= %4d, #job_idle= %4d\n",
    $n_node_tot*20,$n_up*20,$n_up*20-$n_free,$n_free;

$date=`date`;
print "$date";

exit();
