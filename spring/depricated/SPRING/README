***********************************************************
*  SPRING Overview
***********************************************************

Run ./spring.py to get information of the coth parameters

*****Running spring.py*****
The paths in springConfig.py may need to be changed if using different databases. 
There is an example directory for running COTH.  In this directory there is two
sequences called 1o1mA.seq and 1o1mB.seq.  
1. mkdir in your home directory called /home/user/12asA-12asB
2. Copy both sequence files in the example dir to /home/user/12asA-12asB
	2a. The example is located in source/SPRING/example/12asA-12asB
3. Run spring: /pathTo_spring.py/spring.py -q 12asA-12asB -iDir /home/user/
4. To submit as job just use job flag ie
	/pathTo_spring.py/spring.py -q 12asA-12asB -iDir /home/user/ -job
5. For additional information on command line arguments run spring.py without any
	arguments.

*****Monomer Template Docking*****
SPRING runs the programs in the HHsearch directory.  The monomers identified are
used for alignment onto the complex templates.  


*****springConfig.py*****
This file contains all the paths needed to run SPRING.  This file should not have
to be changed unless you have made changes to the database.




*Template Monomer:
The default location for the monomer templates are. if target is
117eA-117eB
chain1: outputDirectory/target/SPRING/117eA_template.pdb
chain2: outputDirectory/target/SPRING/117eB_template.pdb
The templates monomers if present need to have the correct numbering.
The chain1 template residues should go range from 1 to Length of query sequence A
The chain2 template residues should range from 1+length of query sequence A to len( query seqA + query seq B)


Genome SPRING
The springGenome.py is a program used to due a genome wide protein interation search
of a given genome.  The starting input is a fasta directory in genome wide format. An example
is stored in springDirectory/example/genome/

The example has a fasta directory stored in genome wide format. It contains all the sequences
in list.txt. The genome format consits of ./fasta/substringSlice(target)/target
where substringSlice takes a substring of length two from the targtet as a directory name.
This just helps keep things seperated. For example if the target is 12asA the path would be
./fasta/2a/12asA.seq

if the target was 16gsA
./fasta/6g/16gsA

By default the substring is made from the 2nd and 3rd characters of the target string. This can
be changed in the configurationa file. But its not recommended.

Running springGenome.py wihtout arguments provides instructions for running the hhsearch.py
in genome wide format. This will generate the hhm and hhr directories. Which are the hhsearch
profiles and results for the corresponding sequence.

One these files are genearted springGenome.py can be ran to combine the hhr directory information
with index inorder to find possible protein-protein interactions.

in my directory: /nfs/amino-home/bgovi/projects/Genome-Wide/ are three genomes for human, mouse
and fly. This can be looked at for examples.

In the input directory there should be to start a fasta directory and one listFile. The
list file should contain all sequnece targets in newline delimtted format. For example:

Example ListFile.txt:
12asA
12asB
16gsA
1abcA

In the fasta directory there should be four files located in the directories:
/pathToTestDirectory/fasta/2a/12asA.seq
/pathToTestDirectory/fasta/2a/12asB.seq
/pathToTestDirectory/fasta/6g/16gsA.seq
/pathToTestDirectory/fasta/ab/1abcA.seq

After running hhsearch two new directories (hhm and hhr) will be created with
corresponding entries

hhm directories
/pathToTestDirectory/hhm/2a/12asA.hhm
/pathToTestDirectory/hhm/2a/12asB.hhm
/pathToTestDirectory/hhm/6g/16gsA.hhm
/pathToTestDirectory/hhm/ab/1abcA.hhm


hhr directories
/pathToTestDirectory/hhr/2a/12asA.hhr
/pathToTestDirectory/hhr/2a/12asB.hhr
/pathToTestDirectory/hhr/6g/16gsA.hhr
/pathToTestDirectory/hhr/ab/1abcA.hhr


Final Output:
spring_interactions
A final directory is created when springGenome.py is ran. ie spring_interactions

spring_interaction directories
/pathToTestDirectory/spring_interactions/2a/12asA.int
/pathToTestDirectory/spring_interactions/2a/12asB.int
/pathToTestDirectory/spring_interactions/6g/16gsA.int
/pathToTestDirectory/spring_interactions/ab/1abcA.int

in each file it will contain the target id it interacts with, the template used for
matching and a confidence score. Generally a score above 20 is good. The score is a base10
log transform of the minimum value of the HHsearch evalue.

************************************

Index Overview

        File Format for index.txt

        Example segment from index.txt file
        column1  column2   column3
        12e8H    0_0_0     12e8L
        12e8H    0_1_2     12e8L
        12e8H    0_1_3     12e8H
        137lA    0_0_0     137lA
        137lA    0_1_1     212lA
        137lA    1_0_0     137lA
        137lA    1_1_1     212lA
        12e8L    1_0_0     12e8L
        12e8L    1_1_1     12e8H

        The index.txt has three columns:

        Column 1 is the receptor pdb chain.  Every row that
        has the same receptor pdb chain refers to an interaction
        involving that chain.

        Column2: contains three pieces of information.
        biomolecule_CoreOrPartner_chainNumber

        biomolecule refers to which biomolecule the interaction
        comes from.  Each pdbfile has one or several biomoleulces.
        Each biomolecule is a different set of possilby biologically
        relevant orientations of each macromolecule with respect to
        one another.  For example one PDB file may contain a dimer
        with two biomolecules.  Each biomolecule representing a different
        interface.  As you can see from the example above 12e8H only has
        one biomolecule designated with a 0 where as 137lA has two
        biomolecules designated with a 0 and 1.

        CoreOrPartner refers to a row being a core (receptor) or a partner (ligand). For
        example 12e8H has three rows.  The first row with 0_0_0 was
        the chain selected to check for interactions (the core/receptor).
        Every macromolecule in contact with it is considered to be
        a partner/ligand.  Here the core is designated with a 0.  This
        core has two binding partners.  Each binding partner is designated
	with the number 1.	

        chainNumber refers to the order of chains in a pdb file.
        The first chain is 0 the second is 1 and so on.  In the
        12e8H rows the pdb file contains 4 chains, but only the
        last two are involved in interactions with the first chain.
        So there is no interaction of the core with the second
        chain in the PDB file.

        Column 3 contains the reference pdb.  Each pair of sequences
        is searched as monomers through a monomeric database containing
        pdbs found in the reference column. For example if a query
        sequence matches to 12e8L all of the rows containing 12e8H
        and 12e8L in the first column would be used as for further
        evaluation as a complex template because the both have core
        pdbs that share the 12e8L as a reference.  Each reference
        in column 3 shares a high degree of sequence and structural
        similarity to the pdb chain in column 1.


DFIRE Overview
The dfire.txt contains the energy function componenet of SPRING's scoring function


******************Output*******************************

*****SPRING Output*****
init.dat: Text file containing all template models.  This file is used for structure prediction by
TACOS

TemplateSummary.txt: Summary of Top Templates scores.

Templates Directory: Contains each template as a separate PDB File
